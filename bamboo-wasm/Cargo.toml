[package]
name = "bamboo-wasm"
version = "0.5.2"
authors = ["Piet Geursen <pietgeursen@gmail.com>"]
edition = "2018"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[lib]
crate-type = ["cdylib", "rlib"]

[features]

# I'd rather set the default to be u32_backend but if we do that then building from the workspace level breaks. 
# Use the u32_backend feature when actually building for wasm.
default = ["u64_backend"]
u32_backend = ["base", "bamboo-rs-core-ed25519-yasmf/u32_backend", "ed25519-dalek/u32_backend"]
u64_backend = ["base", "bamboo-rs-core-ed25519-yasmf/u64_backend", "ed25519-dalek/u64_backend"]
base = ["wee_alloc", "console_error_panic_hook"]

[dependencies]
arrayvec = { version = "0.5", default-features = false}
wasm-bindgen = { version = "0.2.69"}
bamboo-rs-core-ed25519-yasmf = {path = "../bamboo-rs-core", default-features = false, features = ["std"]}
ed25519-dalek = { version = "1.0.1", default-features = false, features = ["alloc", "serde"] }
rand = { version = "0.7.3", features = ["wasm-bindgen"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.2"
