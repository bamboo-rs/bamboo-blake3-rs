name: bamboo-cli
version: "0.1.0"
author: Piet Geursen <pietgeursen@gmail.com>
about: |
  CLI for publishing and verifying bamboo entries. 

  Includes helpers for 
    - generating a new cryptographic key pair
    - decoding an entry and printing it to std out as json

subcommands:
    - publish:
        about: Publish a new entry and write the bytes to stdout. 
        args:
            - previous-entry-file:
                long: previous-entry-file
                takes_value: true
                help: The file containing the entry previous to this entry. Said another way, it's the most recently published entry.
                required_unless: is-start-of-feed
            - lipmaa-entry-file:
                long: lipmaa-entry-file
                takes_value: true
                help: The file containing the lipmaa entry for this entry. You can calculate the lipmaa number by using the lipmaa command. 
                required_unless: is-start-of-feed
            - payload-file:
                long: payload-file
                takes_value: true
                help: The file containing the payload for this entry.
                required: true
            - public-key-file:
                long: public-key-file
                takes_value: true
                help: The file containing the public key of the author of this entry.
                required: true
            - secret-key-file:
                long: secret-key-file
                takes_value: true
                help: The file containing the secret key of the author of this entry.
                required: true
            - is-start-of-feed:
                long: is-start-of-feed
                takes_value: false
                help: When publishing the very first entry in a feed. If set, then omit the previous-entry-file and lipmaa-entry-file arguments.
            - is-end-of-feed: 
                long: is-end-of-feed
                help: A feed can publish an entry that signals the feed is finished. No more entries can be published to the feed. Requires --force.
                requires: force
            - force:
                long: force
            - log-id:
                long: log-id
                takes_value: true
                help: Each author can publish many different independant feeds that are identified by their log-id, a number from 0 to 2^64-1.
                default_value: "0"
    - verify:
        about: Verify an entry is a valid bamboo entry with a correct cryptographic signature.
        args:
            - entry-file:
                long: entry-file
                takes_value: true
                help: The file containing the bamboo entry to verify.
                required: true
            - payload-file:
                long: payload-file
                takes_value: true
                help: The file containing the payload of the entry. May be omitted if you don't have the payload for the entry. 
            - previous-entry-file:
                long: previous-entry-file
                takes_value: true
                help: The file containing the entry previous to this entry. Omit this if we're the verifying the first entry in a feed.
            - lipmaa-entry-file:
                long: lipmaa-entry-file
                takes_value: true
                help: The file containing the lipmaa entry for this entry. Omit this if we're the verifying the first entry in a feed.
    - lipmaa:
        about: Calculate the lipmaa number for the provided sequence number.
        args:
            - sequence:
                help: The sequence number.
    - decode:
        about: Decode a binary bamboo entry and print it out as json.
        args:
            - entry-file:
                help: The file with an entry to decode.
    - generate-keys:
        about: Generate a new cryptographic key-pair used for publishing entries. Stores them in two new files.
        args:
            - public-key-file:
                long: public-key-file
                short: p
                required: true
                takes_value: true
                help: The path to the file which will store the new public key.
            - secret-key-file:
                long: secret-key-file
                short: s
                required: true
                takes_value: true
                help: The path to the file which will store the new secret key.
